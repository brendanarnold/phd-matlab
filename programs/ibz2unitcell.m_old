function uc_klist=IBZ2unitcell(IBZklist,n_rec_latt_vecs,rl_vecmags,latt_params,latt_type,LCMdivs,symmops);
%function [cartX cartY cartZ indices]=IBZ2mat(IBZklist,rec_latt_vecs);
%
%returns cartXYZ, coordinate matrices (Angst^-1) and indices, a matrix of IBZklist serial
%for each position in the new energy matrix
%requires IBZklist with columns: serial, 'kx,ky,kz', LCMdivs, weight
%IBZklist must contain all points on an orthorhombic mesh
%rec_latt_vecs in Angst^-1
%LCMdivs is denominator of klist coords from .klist
%symmops contains symm operations required for IBZ->unit cell

inv_n_rec_latt_vecs=inv(n_rec_latt_vecs);

switch latt_type
    case {'F','P','C'}     
        rl_IBZklist=IBZklist(:,2:4)*inv_n_rec_latt_vecs;
        %.klist coords are cartesian for these lattices but not for others
        num_extra_kpts=3;
    case 'B'
        rl_IBZklist=IBZklist(:,2:4)*inv_n_rec_latt_vecs;
        num_extra_kpts=1;
    case 'H'
        rl_IBZklist=IBZklist(:,2:4);
        num_extra_kpts=0;
end

uc_klist=[]; tetrah_pts=0;
for IBZkpn=1:size(rl_IBZklist,1)
    weight=IBZklist(IBZkpn,6);
    symmrel_kpts=[];
    for symmop=1:size(symmops,3)
        symmrel_kpts(symmop,:)=(symmops(:,:,symmop)*rl_IBZklist(IBZkpn,:)')';
    end
    symmrel_kpts=mod(symmrel_kpts,LCMdivs);       
    symmrel_kpts=unique(symmrel_kpts,'rows');
    extra_kpt_num=mod(IBZkpn-1,num_extra_kpts+1);
    if extra_kpt_num==0 & size(symmrel_kpts,1)~=weight
        disp('Weight in .klist wrong?');
    end
    if extra_kpt_num==0
        tetrah_pts=tetrah_pts+size(symmrel_kpts,1);
    end
    uc_klist=[uc_klist; [repmat(IBZkpn,[size(symmrel_kpts,1) 1]) symmrel_kpts]];    
end
%remove equivalent points
[uuc_klist uc_indices]=unique(uc_klist(:,2:4),'rows');
if size(uuc_klist,1)~=size(unique(uc_klist,'rows'),1)
    disp('>1 IBZ point for some point(s) in unit cell - either .klist contains some equivalent points or something is wrong.');
end
uc_klist=[uc_klist(uc_indices,1) uuc_klist];

